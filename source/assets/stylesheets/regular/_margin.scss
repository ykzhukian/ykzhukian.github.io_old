/* Reponsive Mixin
–––––––––––––––––––––––––––––––––––––––––––––––––– */
@mixin r($name) {
  .#{$name} { @content }
  @include breakpoint(small)  { .sm-#{$name}.sm-#{$name} { @content } }
  @include breakpoint(medium) { .md-#{$name}.md-#{$name}.md-#{$name} { @content } }
  @include breakpoint(large)  { .lg-#{$name}.lg-#{$name}.lg-#{$name}.lg-#{$name} { @content } }
}


/* Breakpoint
–––––––––––––––––––––––––––––––––––––––––––––––––– */
@mixin breakpoint($point) {
  @if $point == large {
    @media screen and (min-width: $desktop) { @content }
  }
  @else if $point == medium {
    @media screen and (min-width: $tablet) and (max-width: $desktop) { @content }
  }
  @else if $point == small {
    @media screen and (max-width: $tablet) { @content }
  }
}

/* Spacings Helper
–––––––––––––––––––––––––––––––––––––––––––––––––– */
@for $i from 0 through 20 {
  // Padding
  @include r(p#{$i})  { padding: #{$i / 2}rem; }
  @include r(py#{$i}) { padding-top: #{$i / 2}rem; padding-bottom: #{$i / 2}rem; }
  @include r(px#{$i}) { padding-left: #{$i / 2}rem; padding-right: #{$i / 2}rem; }
  @include r(pt#{$i}) { padding-top: #{$i / 2}rem; }
  @include r(pb#{$i}) { padding-bottom: #{$i / 2}rem; }
  @include r(pl#{$i}) { padding-left: #{$i / 2}rem; }
  @include r(pr#{$i}) { padding-right: #{$i / 2}rem; }

  // Margin
  @include r(m#{$i})  { margin: #{$i / 2}rem; }
  @include r(my#{$i}) { margin-top: #{$i / 2}rem; margin-bottom: #{$i / 2}rem; }
  @include r(mx#{$i}) { margin-left: #{$i / 2}rem; margin-right: #{$i / 2}rem; }
  @include r(mt#{$i}) { margin-top: #{$i / 2}rem; }
  @include r(mb#{$i}) { margin-bottom: #{$i /2}rem; }
  @include r(ml#{$i}) { margin-left: #{$i / 2}rem; }
  @include r(mr#{$i}) { margin-right: #{$i / 2}rem; }
}


/* Margin auto
–––––––––––––––––––––––––––––––––––––––––––––––––– */
.m-auto { margin-left: auto; margin-right: auto; }



